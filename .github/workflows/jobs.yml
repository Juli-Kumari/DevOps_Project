name: context-demo-jobs

on:
  workflow_dispatch:
    inputs:
      text:
        description: 'enter the word you want to print'
        default: 'Hello Moon'
        required: true  # mandatory parameter (true is assign here that means)
        type: string

env:
  firstName: 'Anmol'
  website: 'tetsing mini bytes'

jobs:
  contexts-demo: # job 1
    timeout-minutes: 5 #set the maximum time to run this job
    continue-on-error: false # this failure() , iff runs when set continue-on-error: false .
    # if continue-on-error: true , then this failure will not runs.
    container:
      image: selenium-standalone-chrome:latest
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - run: echo ${{ inputs.text }}
      - run: echo ${{ github.event.inputs.text }}
      - run: echo ${{ github.actor }}
      - run: echo 'Hi ${{ env.firstName }}'
      - run: echo 'website - ${{ env.website }}'
      - run: echo ${{job.status}} # currebt job's STATUS
      - run: echo ${{ runner.os }}
      - run: echo ${{ secrets.PASSWORD }} ${{ env.firstName }} # preference to LOCAL envvariable first
        env:
          firstName: 'Testing' #local environment variable 
  
  contexts-demo2: # job 2
    needs: [contexts-demo] # dependent on 1st job
    runs-on: ubuntu-latest
    steps:
      - run: echo 'Job 2 executed after Job 1'

  job3:
    runs-on: ubuntu-latest
    if: ${{ always() }} #job 3 always run
    needs: [context-demo]
    steps:
      - run: echo 'job 3'
  
  job4:
    runs-on: ubuntu-latest
    #job 4 runs when any failure is happend in the context-demo job.
    # this failure() , iff runs when set continue-on-error: false .
    # if continue-on-error: true , then this failure will not runs.
    if: ${{ failure() }} 
    needs: [context-demo]
    steps:
      - run: echo 'job 4'

